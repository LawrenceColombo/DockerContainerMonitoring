version: "3"

volumes: 
    prometheus_data: {}
    grafana_data: {}

networks:
  monitor-net:
    driver: bridge

services:
    prometheus:
        image: prom/prometheus:v2.7.1
        container_name: prometheus
        ports:
            - "9090:9090"
        volumes: 
            - prometheus_data:/prometheus
            - ./prometheus/:/etc/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
        restart: unless-stopped
        networks: 
            - monitor-net

    node-exporter:
        image: prom/node-exporter:v0.17.0
        container_name: node-exporter
        command:
            - '--path.procfs=/host/proc'
            - '--path.rootfs=/rootfs'
            - '--path.sysfs=/host/sys'
            - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
        restart: unless-stopped
        # ports:
        #     - "9100:9100"
        expose: 
            - "9100"
        networks: 
            - monitor-net
    
    cadvisor:
        image: google/cadvisor:v0.32.0
        container_name: cadvisor
        command:
            - '--port=9110'
        volumes: 
            - /:/rootfs:ro
            - /var/run:/var/run:ro
            - /sys:/sys:ro
            - /var/lib/docker:/var/lib/docker:ro
            - /dev/disk:/dev/disk:ro
        restart: unless-stopped
        # ports: 
        #     - "9110:9110"
        expose:
            - "9110"
        networks: 
            - monitor-net

    grafana:
        build:
            context: ./grafana
        container_name: grafana
        environment:
            - "GF_SERVER_HTTP_PORT=9120"
            - "GF_SERVER_ROOT_URL=http://0.0.0.0:9120"
            - "GF_AUTH_ANONYMOUS_ENABLED=true"
            - "GF_AUTH_ANONYMOUS_ORG_NAME=Main Org."
            - "GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer"
            - "GF_PATHS_PROVISIONING=/etc/grafana/provisioning"
        volumes:
            - grafana_data:/var/lib/grafana
        restart: unless-stopped
        ports:
            - "9120:9120"
        expose:
            - "9120"
        networks: 
            - monitor-net

    nginx:
        build:
            context: ./nginx
        container_name: nginx
        restart: unless-stopped
        expose: 
            - "8080"
            - "80"
        ports:
            - "8080:8080"
            - "80:80"
        networks: 
            - monitor-net